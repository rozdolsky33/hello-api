name: CI Checks

on:
  push:
    branches: # <1>
      - main
jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest # <2>
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: ^1.21
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Run Test
        run: make test # <1>
      - name: Coverage Check
        run: make coverage # <2>
      - name: Generate Report
        run: make report # <3>
      - name: Copy Files
        run: |
          mkdir  reports
          cp cover.html reports/.

      - name: Archive #
        uses: actions/upload-artifact@v4
        with:
          name: reports #
          path: reports
  build:
    name: Build App
    runs-on: ubuntu-latest #
    needs: test #<6>
    steps:
      - name: Set up Go 1.x #
        uses: actions/setup-go@v5
        with:
          go-version: ^1.21

      - name: Check out code into the Go module directory #
        uses: actions/checkout@v4

      - name: Build
        run: make build #

      - name: Copy Files #
        run: |
          mkdir  artifacts
          cp api artifacts/.

      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: artifacts

  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: api
          path: artifacts
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream
  deploy-function:
    name: Deploy FaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out code into the Go module directory # <4>
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Deploy function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: translate
          entry_point: Translate
          runtime: go113
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account: ${{ secrets.GCP_CREDENTIALS }}
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"
#  deploy-paas:
#    name: Deploy PaaS
#    runs-on: ubuntu-latest
#    needs: test
#    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#    steps:
#      - name: Check out code into the Go module directory # <4>
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Deploy App
#        id: deploy
#        uses: google-github-actions/deploy-appengine@main
#        with:
#          credentials: ${{ secrets.gcp_credentials }}
#      - id: test
#        run: curl "${{ steps.deploy.outputs.url }}/translate/hello"